<%-- Author: Tom DuPont --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Debug="False"
    Src="NHibernateHelper.cs" Inherits="NHibernateHelper"
    Description="Generates an editable DataContext for PLINQO for NHibernate." %>

<%@ Property Category="1. Source" Name="SourceManager" Type="CodeSmith.SchemaHelper.EntityManager"
    Optional="False"
    Description="The source database to generate from." %>
<%@ Property Category="2. DataContext" Name="DataContextName" Type="System.String" 
    Optional="False" Default="" 
    Description="Name of the generated DataContext." %>
<%@ Property Category="2. DataContext" Name="BaseNamespace" Type="System.String" 
    Optional="False" Default="" 
    Description="Namespace of all generated base files." %>

<%@ Assembly Name="CodeSmith.SchemaHelper" Path="../../Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.NHibernate" Path="../../Common" %>

<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="CodeSmith.SchemaHelper.NHibernate" %>
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Text;
using NHibernate;
<% foreach(string ns in GetEntityNamespaces(SourceManager)) { %>
using <%= ns %>;
<% } %>

namespace <%= BaseNamespace %>
{
    public partial class <%= DataContextName %>
    {
        // Place your custom code here.
        
        #region Override Methods

        protected override string GetConnectionString(string databaseName)
        {
            return base.GetConnectionString(databaseName);
        }

        #endregion
    }
}