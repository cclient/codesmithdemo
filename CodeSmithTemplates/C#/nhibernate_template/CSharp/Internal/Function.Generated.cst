<%-- Author: Tom DuPont --%>
<%@ CodeTemplate Language="C#" TargetLanguage="C#" Debug="False"
    Src="NHibernateHelper.cs" Inherits="NHibernateHelper"
    Description="Generates an editable Business Entity for PLINQO for NHibernate." %>

<%@ Property Category="1. Source" Name="SourceCommand" Type="CodeSmith.SchemaHelper.NHibernate.NHibernateCommandEntity"
    Optional="False"
    Description="The source entity to generate from." %>
<%@ Property Category="2. Namespaces" Name="BaseNamespace" Type="System.String"
    Optional="False"
    Description="Namespace of all generated base files." %>
    
<%@ Assembly Name="System.Xml.Linq" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="../../Common" %>
<%@ Assembly Name="CodeSmith.SchemaHelper.NHibernate" Path="../../Common" %>

<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="CodeSmith.SchemaHelper.NHibernate" %>
using System;
using System.Collections.Generic;
using System.Text;
using NHibernate;
using <%= BaseNamespace %>;

namespace <%= SourceCommand.Namespace %>
{
	public partial class <%= SourceCommand.GetModelName() %>
    {
        public <%= SourceCommand.GetModelName() %>(<%= GetParameters(SourceCommand, SourceCommand.Properties) %>)
        {
            <% foreach(IProperty property in SourceCommand.Properties) { %>
            <%= property.Name %> = <%= CleanParamName(SourceCommand, property.VariableName) %>;
            <% } %>
        }
        <% foreach(IProperty property in SourceCommand.Properties) { %>
        
        public <%= property.SystemType %> <%= property.Name %> { get; set; }
        <% } %>
	}
}